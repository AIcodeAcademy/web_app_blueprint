---
description: Rules for writing TypeScript code
globs: *.ts
---
# Type Script rules

- Prefer `type` over `interface`
- Prefer functions over classes
- Prefer `#` over `_` for private members
- Avoid `null` and `undefined`
- Avoid deep nested anonymous functions by asigning named functions
- Avoid deep nested control structures by using early returns
- Validate data using plain TS functions no ValueObjects needed
- Avoid external libraries as much as possible

# Html inline 

- Declare an `html` const as `const html = String.raw;` for HTML tagged content
- Add `id` `name` or `role` attributes to facilitate node selections

# Folder structure

- For simple web projects prefer organization by technology rather tha feature

```txt
docs/ 
public/
src/
  components/ # for composable UI
  logic/ # for business logic
  models/ # for types and interfaces
  utils/ # for utility functions
tests/
```

# File structure

- Export only one artifact per file
- Use the following naming convention `{{business}}.{{technical}}.ts`, where :
  - business is related to functional or specification domain
  - technical is one of: `type` | `component` | `function` 